# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  test:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.8

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install library
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py install      
            pip install pytest pytest-cov pylint mypy

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pylint -E bitcart
            mypy bitcart

      - store_artifacts:
          path: test-reports
          destination: test-reports
  deploy:
    docker:
       - image: circleci/python:3.6.8
    steps:
      - checkout
      - run:
          name: setup credentials
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USER"" >> ~/.pypirc
            echo -e "password = $PYPI_PASS" >> ~/.pypirc
      - run:
          name: create env, build dist and upload
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py sdist 
            python setup.py bdist_wheel
            twine upload dist/*

            
      

          
workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - deploy:
          context: global
          requires:
            - test
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/