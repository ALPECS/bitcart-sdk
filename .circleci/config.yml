version: 2
jobs:
  test:
    docker:
      - image: circleci/python:3.6.8

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install library
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py install      
            pip install -r test-requirements.txt

      - run:
          name: install daemon
          command: |
            . venv/bin/activate
            git clone https://github.com/MrNaif2018/bitcart bitcart-daemon
            cd bitcart-daemon
            pip install -r requirements/base.txt
            pip install -r requirements/daemons/btc.txt

      - run:
          name: prepare daemon
          command: |
            . venv/bin/activate
            cd bitcart-daemon
            BTC_DEBUG=true python3 daemons/btc.py
          background: true

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pylint -E bitcart
            mypy bitcart
            coverage run -m pytest
            coverage report
            codecov

      - store_artifacts:
          path: test-reports
          destination: test-reports
  deploy:
    docker:
      - image: circleci/python:3.6.8
    steps:
      - checkout
      - run:
          name: setup credentials
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USER" >> ~/.pypirc
            echo -e "password = $PYPI_PASS" >> ~/.pypirc
      - run:
          name: create env, build dist and upload
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -U wheel twine
            python setup.py sdist 
            python setup.py bdist_wheel
            twine upload dist/*
            rm -rf dist/*
            export ASYNC=false
            python setup.py sdist 
            python setup.py bdist_wheel
            twine upload dist/*

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - deploy:
          context: global
          requires:
            - test
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
